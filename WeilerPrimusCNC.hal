# Generated by PNCconf at Sun Nov 20 21:50:07 2022
# Using LinuxCNC version:  Master (2.9)
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2
loadrt hm2_eth board_ip="192.168.1.121" config="num_encoders=5 num_pwmgens=0 num_stepgens=3 sserial_port_0=0xxxxx" 
setp    [HMOT](CARD0).watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.z,pid.s

addf [HMOT](CARD0).read          servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf [HMOT](CARD0).write         servo-thread
setp [HMOT](CARD0).dpll.01.timer-us -50
setp [HMOT](CARD0).stepgen.timer-number 1

loadusr -Wn arduino arduino_connector
loadusr HeadRevolver
# P1 output signals

setp [HMOT](CARD0).gpio.041.is_output true #M1 Spindle
setp [HMOT](CARD0).gpio.042.is_output true #M2 Ã–l schmierpumpe
setp [HMOT](CARD0).gpio.043.is_output true #M3 
setp [HMOT](CARD0).gpio.044.is_output true #M4 KSS
setp [HMOT](CARD0).gpio.045.is_output true #M5 Hydraulik Pumpe
setp [HMOT](CARD0).gpio.046.is_output true #XZ Enable


setp [HMOT](CARD0).gpio.041.invert_output true #M1 off when booting
setp [HMOT](CARD0).gpio.042.invert_output true #M2 off when booting
setp [HMOT](CARD0).gpio.043.invert_output true #M3 off when booting
setp [HMOT](CARD0).gpio.044.invert_output true #M4 off when booting
setp [HMOT](CARD0).gpio.045.invert_output true ##M5 off when booting
setp [HMOT](CARD0).gpio.046.invert_output true #XZ Ena off when booting

setp [HMOT](CARD0).gpio.047.is_output true #Z Enable
setp [HMOT](CARD0).gpio.049.is_output true #Z Alarm Reset
setp [HMOT](CARD0).gpio.050.is_output true #X Enable
setp [HMOT](CARD0).gpio.051.is_output true #Z Alarm Reset

setp [HMOT](CARD0).gpio.047.invert_output true #Z Enable
setp [HMOT](CARD0).gpio.049.invert_output true #Z Alarm Reset
setp [HMOT](CARD0).gpio.050.invert_output true #X Enable
setp [HMOT](CARD0).gpio.051.invert_output true #Z Alarm Reset

# Arduino signals

# arduino.BinSelKnob.14
# arduino.BinSelKnob.15
# arduino.BinSelKnob.16
# arduino.BinSelKnob.17
# arduino.BinSelKnob.18
# arduino.BinSelKnob.19
# arduino.BinSelKnob.20
# arduino.BinSelKnob.21
# arduino.BinSelKnob.22
# arduino.BinSelKnob.23
# arduino.BinSelKnob.24
# arduino.BinSelKnob.25
# arduino.BinSelKnob.26
# arduino.BinSelKnob.27
# arduino.BinSelKnob.28
# arduino.BinSelKnob.29
# arduino.BinSelKnob.30
# arduino.BinSelKnob.31
# arduino.BinSelKnob.0
# arduino.BinSelKnob.1
# arduino.BinSelKnob.2



#arduino.LPoti.1.0
#arduino.LPoti.1.1
#arduino.LPoti.1.2
#arduino.LPoti.1.3
#arduino.LPoti.1.4
#arduino.LPoti.1.5
#arduino.LPoti.1.6
#arduino.LPoti.1.7
#arduino.LPoti.1.8

#arduino.LPoti.2.0
#arduino.LPoti.2.1
#arduino.LPoti.2.2
#arduino.LPoti.2.3


#arduino.aIn.0


#arduino.dIn.12     
#arduino.dIn.28     start
#arduino.dIn.30     MPG Enable
#arduino.dIn.31     radial servo
#arduino.dIn.32     oil
#arduino.dIn.33
#arduino.dIn.34     
#arduino.dIn.35     mist
#arduino.dIn.36     flood
#arduino.dIn.37     coolant off
#arduino.dIn.38     -
#arduino.dIn.39     alarm
#arduino.dIn.40     machine off
#arduino.dIn.41     machine on
#arduino.dIn.42     spindel ccw
#arduino.dIn.43     chuck open
#arduino.dIn.44     spindle stop
#arduino.dIn.45     chuck close
#arduino.dIn.46     spindel cw
#arduino.dIn.47     stop
#arduino.dIn.48     tool change
#arduino.dIn.49     pause




#arduino.DLED.0
#arduino.DLED.1
#arduino.DLED.2
#arduino.DLED.3
#arduino.DLED.4
#arduino.DLED.5
#arduino.DLED.6
#arduino.DLED.7
#arduino.DLED.8
#arduino.DLED.9
#arduino.DLED.10
#arduino.DLED.11
#arduino.DLED.12
#arduino.DLED.13
#arduino.DLED.14
#arduino.DLED.15
#arduino.DLED.16
#arduino.DLED.17
#arduino.DLED.18
#arduino.DLED.19
#arduino.DLED.20
#arduino.DLED.21
#arduino.DLED.22
#arduino.DLED.23
#arduino.DLED.24
#arduino.DLED.25




#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.x.maxerror 0.012700

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp   [HMOT](CARD0).stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp   [HMOT](CARD0).stepgen.00.steplen         [JOINT_0]STEPLEN
setp   [HMOT](CARD0).stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp   [HMOT](CARD0).stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   [HMOT](CARD0).stepgen.00.step_type        0
setp   [HMOT](CARD0).stepgen.00.control-type     1
setp   [HMOT](CARD0).stepgen.00.maxaccel         [JOINT_0]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.00.maxvel           [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-vel-cmd    <= joint.0.vel-cmd
net x-output     => [HMOT](CARD0).stepgen.00.velocity-cmd   #[HMOT](CARD0).stepgen.00.velocity-cmd
net x-pos-fb     <= [HMOT](CARD0).stepgen.00.position-fb    #[HMOT](CARD0).encoder.02.position
net x-pos-fb     => joint.0.motor-pos-fb
net x-enable     <= joint.0.amp-enable-out
net x-enable     => [HMOT](CARD0).stepgen.00.enable


setp [HMOT](CARD0).encoder.02.counter-mode 0
setp [HMOT](CARD0).encoder.02.filter 1
setp [HMOT](CARD0).encoder.02.scale [JOINT_0]ENCODER_SCALE
# ---setup home / limit switch signals---


net x-home-sw       <=  [HMOT](CARD0).inmux.00.input-18-not
net x-neg-limit     <=  [HMOT](CARD0).inmux.00.input-16-not
net x-pos-limit     <=  [HMOT](CARD0).inmux.00.input-17-not

net x-home-sw     =>  joint.0.home-sw-in
net x-neg-limit     =>  joint.0.neg-lim-sw-in
net x-pos-limit     =>  joint.0.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 1
#*******************

setp   pid.z.Pgain     [JOINT_1]P
setp   pid.z.Igain     [JOINT_1]I
setp   pid.z.Dgain     [JOINT_1]D
setp   pid.z.bias      [JOINT_1]BIAS
setp   pid.z.FF0       [JOINT_1]FF0
setp   pid.z.FF1       [JOINT_1]FF1
setp   pid.z.FF2       [JOINT_1]FF2
setp   pid.z.deadband  [JOINT_1]DEADBAND
setp   pid.z.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.z.maxerror 0.012700

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.01.dirsetup      [JOINT_1]DIRSETUP
setp   [HMOT](CARD0).stepgen.01.dirhold         [JOINT_1]DIRHOLD
setp   [HMOT](CARD0).stepgen.01.steplen         [JOINT_1]STEPLEN
setp   [HMOT](CARD0).stepgen.01.stepspace       [JOINT_1]STEPSPACE
setp   [HMOT](CARD0).stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp   [HMOT](CARD0).stepgen.01.step_type        2
setp   [HMOT](CARD0).stepgen.01.control-type     1
setp   [HMOT](CARD0).stepgen.01.maxaccel         [JOINT_1]STEPGEN_MAXACCEL
setp   [HMOT](CARD0).stepgen.01.maxvel           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.1.motor-pos-cmd
net z-vel-cmd    <= joint.1.vel-cmd
net z-output     => [HMOT](CARD0).stepgen.01.velocity-cmd   #[HMOT](CARD0).stepgen.01.velocity-cmd
net z-pos-fb     <= [HMOT](CARD0).stepgen.01.position-fb#[HMOT](CARD0).encoder.01.position
net z-pos-fb     => joint.1.motor-pos-fb
net z-enable     <= joint.1.amp-enable-out
net z-enable     => [HMOT](CARD0).stepgen.01.enable

setp [HMOT](CARD0).encoder.01.counter-mode 0
setp [HMOT](CARD0).encoder.01.filter 1
setp [HMOT](CARD0).encoder.01.scale [JOINT_1]ENCODER_SCALE
# ---setup home / limit switch signals---

net z-home-sw       <=  [HMOT](CARD0).inmux.00.input-22-not
net z-neg-limit     <=  [HMOT](CARD0).inmux.00.input-20-not
net z-pos-limit     <=  [HMOT](CARD0).inmux.00.input-21-not


net z-home-sw     =>  joint.1.home-sw-in
net z-neg-limit     =>  joint.1.neg-lim-sw-in
net z-pos-limit     =>  joint.1.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************


setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
setp   pid.s.maxerror 0.000500

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# Step Gen signals/setup

setp   [HMOT](CARD0).stepgen.02.dirsetup        [SPINDLE_0]DIRSETUP
setp   [HMOT](CARD0).stepgen.02.dirhold         [SPINDLE_0]DIRHOLD
setp   [HMOT](CARD0).stepgen.02.steplen         [SPINDLE_0]STEPLEN
setp   [HMOT](CARD0).stepgen.02.stepspace       [SPINDLE_0]STEPSPACE
setp   [HMOT](CARD0).stepgen.02.position-scale  [SPINDLE_0]STEP_SCALE
setp   [HMOT](CARD0).stepgen.02.step_type        2
setp   [HMOT](CARD0).stepgen.02.control-type     1
setp   [HMOT](CARD0).stepgen.02.maxaccel         [SPINDLE_0]MAX_ACCELERATION
setp   [HMOT](CARD0).stepgen.02.maxvel           [SPINDLE_0]MAX_VELOCITY

net spindle-enable          =>  [HMOT](CARD0).stepgen.02.enable
net spindle-vel-cmd-rps     =>  [HMOT](CARD0).stepgen.02.velocity-cmd
net spindle-vel-fb-rps         <= [HMOT](CARD0).encoder.00.velocity #[HMOT](CARD0).stepgen.02.velocity-fb

# ---setup spindle Encoders---

setp [HMOT](CARD0).encoder.00.counter-mode 0
setp [HMOT](CARD0).encoder.00.filter 1
setp [HMOT](CARD0).encoder.00.scale [SPINDLE_0]ENCODER_SCALE
#net spindle-index-enable [HMOT](CARD0).encoder.00.index-enable <=> spindle.0.index-enable

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs <= [HMOT](CARD0).encoder.00.position
net spindle-at-speed           =>  spindle.0.at-speed 
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable <=> [HMOT](CARD0).encoder.00.index-enable

net spindle-enable => hm2_7i95.0.ssr.00.out-00 #Put Servo in Speed mode
#net spindle-enable => hm2_7i95.0.ssr.00.out-00 #Put Servo in Position mode

# ---Setup spindle at speed signals---

sets spindle-at-speed true


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.1.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward <= arduino.dIn.46
net spindle-cw  => arduino.DLED.2
net spindle-manual-ccw    halui.spindle.0.reverse <= arduino.dIn.42
net spindle-ccw  => arduino.DLED.0
net spindle-manual-stop   halui.spindle.0.stop <= arduino.dIn.44
net spindle-brake => arduino.DLED.1
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist #<= arduino.dIn.35 
net coolant-flood     <=  iocontrol.0.coolant-flood #<= arduino.dIn.36

net coolant-mist => arduino.DLED.18
net coolant-flood => arduino.DLED.19

#  ---probe signal---

net probe-in     =>  motion.probe-input




#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

net machine-is-enabled => [HMOT](CARD0).gpio.047.out => [HMOT](CARD0).gpio.050.out # Enable X&Z Motor
net machine-is-enabled => [HMOT](CARD0).gpio.046.out => [HMOT](CARD0).gpio.041.out #turn on XZ Servos & Spindle when motion is enabled


#  ---digital in / out signals---

#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-out     =>  iocontrol.0.emc-enable-in
net estop-ext     <=  [HMOT](CARD0).inmux.00.input-11 => halui.estop.reset
net estop-set     <=  [HMOT](CARD0).inmux.00.input-11-not => halui.estop.activate



net Pause-Pgm <= arduino.dIn.49 

net Pgm-Stop <= arduino.dIn.47



#Power On Buttons and LED's
net poweron-button => halui.machine.on <= arduino.dIn.41
net poweroff-button => halui.machine.off <= arduino.dIn.40

net machine-is-on  => arduino.DLED.24 => arduino.DLED.23




loadrt mux2 count=1
addf mux2.0 servo-thread

#net ADC_value arduino.aIn.0 => mux2.0.in0
#net spindle-command motion.spindle-speed-out  => mux2.0.in1
#net spindle-select halui.program.is-running => mux2.0.sel
#net selected-spindle mux2.0.out => spindle-vel-cmd-rpm




#Spindle Override
setp halui.spindle.0.override.direct-value true
setp halui.spindle.0.override.count-enable true
setp halui.spindle.0.override.scale 0.01

net SpindleOverride <= halui.spindle.0.override.counts <= arduino.LPoti.1.out


#Feed Override
setp halui.feed-override.count-enable 1
setp halui.feed-override.direct-value 1
setp halui.feed-override.scale 0.01

net FeedOverride <= arduino.BinSelKnob.0.out => halui.feed-override.counts


#MPG
net mpg-enable axis.z.jog-enable <= axis.x.jog-enable <= arduino.dIn.30
net mpg-enable => arduino.DLED.13

net Zencoder-counts <= hm2_7i95.0.inmux.00.enc0-count #Z
net Zencoder-counts => axis.z.jog-counts

net Xencoder-counts <= hm2_7i95.0.inmux.00.enc1-count #Z
net Xencoder-counts => axis.x.jog-counts

net mpg-scale <= arduino.LPoti.2.out
net mpg-scale => axis.x.jog-scale axis.z.jog-scale


# Hydraulics
net Hydraulic_pump_on <= arduino.dIn.33 => arduino.DLED.16
net Hydraulic_pump_on => [HMOT](CARD0).gpio.045.out

net chuck_close <= [HMOT](CARD0).ssr.00.out-04 <= arduino.dIn.43
net chuck_close => arduino.DLED.9
net chuck_open <= [HMOT](CARD0).ssr.00.out-05 <= arduino.dIn.45
net chuck_open => arduino.DLED.8

#Sauter Tool Changer

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange

net tool-change-request    <= iocontrol.0.tool-change => Sauter.trequest
net tool-change-confirmed  => iocontrol.0.tool-changed => Sauter.toolchanged
net tool-number            <= iocontrol.0.tool-prep-number => Sauter.toolnumber

#  ---Use external manual tool change dialog---

#net tool-change-request    =>  hal_manualtoolchange.change
#net tool-change-confirmed  <=  hal_manualtoolchange.changed
#net tool-number            =>  hal_manualtoolchange.number


#  ---ignore tool prepare requests---
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared


#HMI LED's
net turretpos1 <= [HMOT](CARD0).inmux.00.input-12
net turretpos1 => arduino.DLED.4 => Sauter.pos1

net turretpos2 <= [HMOT](CARD0).inmux.00.input-14
net turretpos2 => arduino.DLED.5 => Sauter.pos2

net turretpos3 <= [HMOT](CARD0).inmux.00.input-13
net turretpos3 => arduino.DLED.6 => Sauter.pos3

net turretpos4 <= [HMOT](CARD0).inmux.00.input-15
net turretpos4 => arduino.DLED.7 => Sauter.pos4

 
net Hydraulic_pump_on => Sauter.hydraulik

#Outputs
net ValveA <= Sauter.coilA => [HMOT](CARD0).ssr.00.out-02
net ValveB <= Sauter.coilB => [HMOT](CARD0).ssr.00.out-03


net Fault <= Sauter.fault => arduino.DLED.22
#c.newpin("reset", hal.HAL_BIT, hal.HAL_IN)
#c.newpin("debug", hal.HAL_FLOAT, hal.HAL_OUT)